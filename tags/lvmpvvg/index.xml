<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>LVM,PV,VG - 标签 - 在阅读中遇见自己</title>
        <link>https://freerun.site/tags/lvmpvvg/</link>
        <description>LVM,PV,VG - 标签 - 在阅读中遇见自己</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>823715972@qq.com (Ylimhs)</managingEditor>
            <webMaster>823715972@qq.com (Ylimhs)</webMaster><lastBuildDate>Mon, 20 May 2024 16:48:38 &#43;0800</lastBuildDate><atom:link href="https://freerun.site/tags/lvmpvvg/" rel="self" type="application/rss+xml" /><item>
    <title>Liunx系统分区与扩容</title>
    <link>https://freerun.site/liunx%E7%B3%BB%E7%BB%9F%E5%88%86%E5%8C%BA%E4%B8%8E%E6%89%A9%E5%AE%B9/</link>
    <pubDate>Mon, 20 May 2024 16:48:38 &#43;0800</pubDate>
    <author>Ylimhs</author>
    <guid>https://freerun.site/liunx%E7%B3%BB%E7%BB%9F%E5%88%86%E5%8C%BA%E4%B8%8E%E6%89%A9%E5%AE%B9/</guid>
    <description><![CDATA[<h2 id="1挂载目录">1、挂载目录</h2>
<p>注释：xfs和ext4是Linux操作系统中常见的两种文件系统</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1">#格式化文件系统</span>
mkfs.ext4 /dev/sdb

<span class="c1">#查看文件系统</span>
blkid /dev/sdb

<span class="c1">#挂载分区到目录</span>
vim /etc/fstab 
<span class="c1">#把这一段写入fstab文件：/dev/sdb /home ext4 defaults 0 0</span>
mount -a
</code></pre></td></tr></table>
</div>
</div><h2 id="2新磁盘创建卷组与逻辑卷并且挂载home目录">2、新磁盘创建卷组与逻辑卷并且挂载/home目录</h2>
<p><strong>只有lvm(逻辑卷才能扩容)，下图意思是：有9块物理硬盘，其中有6块硬盘组成一个卷组，然后这个卷组了20g给逻辑卷用：物理卷（PV）、卷组（VG）和逻辑卷（LV）</strong></p>
<p></p>
<h3 id="pvcreate-创建物理卷">pvcreate 创建物理卷</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1">#首先是创建PV，上图中的9块硬盘，centos7以上系统直接可以省略这步骤 pvcreate /dev/sdb  /dev/sdc1</span>

<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># pvcreate  /dev/sdb /dev/sdc 				#直接将磁盘或某个分区转化为物理卷，</span>
  Physical volume <span class="s2">&#34;/dev/sdb&#34;</span> successfully created.
  Physical volume <span class="s2">&#34;/dev/sdc&#34;</span> successfully created.
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># pvs											#查看有哪些物理卷</span>
  PV         VG Fmt  Attr PSize  PFree
  /dev/sda2  cl lvm2 a--  11.00g 4.00m
  /dev/sdb      lvm2 ---   8.00g 8.00g
  /dev/sdc      lvm2 ---   6.00g 6.00g
</code></pre></td></tr></table>
</div>
</div><h3 id="vgcreate-创建卷组">vgcreate 创建卷组</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1">#创建卷组（虚拟硬盘）:vgcreate 卷组名 物理卷1 物理卷2 ..... </span>
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># vgcreate my_data /dev/sdb /dev/sdc	#创建一个名为my_data的卷组并将sdb和sdc物理卷加入其中，PE的大小默认为4M</span>
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># vgs	#查看卷组，下面有一个创建好的my_data卷组为1G</span>
  VG      <span class="c1">#PV #LV #SN Attr   VSize    VFree   </span>
  centos    <span class="m">1</span>   <span class="m">2</span>   <span class="m">0</span> wz--n-   &lt;9.00g    4.00m
  my_data   <span class="m">1</span>   <span class="m">0</span>   <span class="m">0</span> wz--n- 1020.00m 1020.00m 
</code></pre></td></tr></table>
</div>
</div><h3 id="lvcreate-创建逻辑卷">lvcreate 创建逻辑卷</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># lvcreate -n lv_data -L 500M  my_data		#在my_data卷组上创建一个名称叫lv_data的500M的逻辑卷</span>
  Logical volume <span class="s2">&#34;lv_data&#34;</span> created.
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># lvs</span>
  LV      VG      Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root    centos  -wi-ao----   7.99g                                                    
  swap    centos  -wi-ao----   1.00g                                                    
  lv_data my_data -wi-a----- 500.00m  
</code></pre></td></tr></table>
</div>
</div><p><strong>重点：</strong>
当我们lvcreate创建一个逻辑卷的时候，其实相当于生成了一个磁盘设备文件，这是由lvm的mapper机制决定，Linux会新建两个软链接文件，如<code>/dev/vg_name/lv_name、/dev/mapper/vg_name-lv_name</code>，而这2个文件都是指向<code>/dev/dm-X</code> 块设备文件的，所以，当我们使用<code>df -h</code>看到的<code>/dev/mapper/vg_name-lv_name</code>的时候，这个其实就是和<code>/dev/vg_name/lv_name</code>一样的，都是指向<code>/dev/dm-X</code> 块设备文件的。</p>
<h3 id="mkfs-格式化分区并创建文件系统">mkfs 格式化分区并创建文件系统</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># mkfs.ext4 /dev/sdb  #格式化磁盘分区为ext4文件系统，这一步也可以忽略</span>
mke2fs 1.42.9 <span class="o">(</span>28-Dec-2013<span class="o">)</span>
/dev/sdb is entire device, not just one partition!

<span class="c1">#对上面刚才创建的lv进行格式化并创建ext4类型的文件系统</span>
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># mkfs.ext4 /dev/my_data/lv_data  </span>

<span class="c1">#挂载分区到目录</span>
vim /etc/fstab 
<span class="c1">#把这一段写入fstab文件：/dev/my_data/lv_data /home ext4 defaults 0 0</span>
mount -a

df -hT
</code></pre></td></tr></table>
</div>
</div><h2 id="3linux系统扩容lvm磁盘空间">3、Linux系统扩容Lvm磁盘空间</h2>
<p><strong>扩容步骤为：先扩容卷组 -&gt; 再扩容逻辑卷 -&gt;刷新文件系统</strong></p>
<h3 id="vgextend-扩容卷组即把物理卷加入卷组">vgextend 扩容卷组，即把物理卷加入卷组</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># vgs       #还剩下520M的容量</span>
  VG      <span class="c1">#PV #LV #SN Attr   VSize    VFree  </span>
  centos    <span class="m">1</span>   <span class="m">2</span>   <span class="m">0</span> wz--n-   &lt;9.00g   4.00m
  my_data   <span class="m">1</span>   <span class="m">1</span>   <span class="m">0</span> wz--n- 1020.00m 520.00m
  
<span class="c1">#vgextend 命令把sdd1物理卷加入my_data卷组（sdd1已经是物理卷了，my_data是卷组名称）</span>
<span class="o">[</span>root@localhost /<span class="o">]</span><span class="c1"># vgextend my_data /dev/sdd1	</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="lvextend扩容逻辑卷即把卷组空间加入到逻辑卷中">lvextend扩容逻辑卷，即把卷组空间加入到逻辑卷中</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1">#/dev/my_data/lv_data这个逻辑卷增加520M</span>
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># lvextend -L +520M /dev/my_data/lv_data  </span>
	Size of logical volume my_data/lv_data changed from 500.00 MiB <span class="o">(</span><span class="m">125</span> extents<span class="o">)</span> to 1020.00 MiB <span class="o">(</span><span class="m">255</span> extents<span class="o">)</span>.
  Logical volume my_data/lv_data successfully resized.

<span class="c1">#这个时候发现lv_data这个逻辑卷已经扩大到1G</span>
<span class="o">[</span>root@c2 ~<span class="o">]</span><span class="c1"># lvs </span>
  LV      VG      Attr       LSize    Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root    centos  -wi-ao----    7.99g                                                    
  swap    centos  -wi-ao----    1.00g                                                    
  lv_data my_data -wi-ao---- 1020.00m  

<span class="c1">#但是df查看容量没有加载，这个时候需要刷新才行</span>
<span class="o">[</span>root@c2 ~<span class="o">]</span><span class="c1"># df -hT /home/ </span>
文件系统                    类型  容量  已用  可用 已用% 挂载点
/dev/mapper/my_data-lv_data ext4  477M  2.3M  445M    1% /home

<span class="c1">#查看你的逻辑卷是什么文件系统类型，如果是xfs文件系统，使用xfs_growfs命令扩展容量：</span>
xfs_growfs /dev/mysql/lv_data
<span class="c1">#查看你的逻辑卷是什么文件系统类型，如果是ext4文件系统，使用resize2fs命令扩展容量：</span>
resize2fs /dev/root_vg/root
</code></pre></td></tr></table>
</div>
</div><h2 id="4扩容根分区">4、扩容根分区</h2>
<p><strong>注释：首先确定根分区是不是lvm卷，如果不是那就不允许扩容</strong></p>
<p><strong>扩容步骤为：先扩容卷组 -&gt; 再扩容逻辑卷 -&gt;刷新文件系统</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1">#查询卷组，查看卷组名为centos的卷组是否有容量扩容，下面显示vFree为4.00M,显然已经不够扩容</span>
<span class="o">[</span>root@c2 ~<span class="o">]</span><span class="c1"># vgs   </span>
  VG      <span class="c1">#PV #LV #SN Attr   VSize    VFree</span>
  centos    <span class="m">1</span>   <span class="m">2</span>   <span class="m">0</span> wz--n-   &lt;9.00g 4.00m
<span class="c1">#查询是否有分区给卷组扩容</span>
<span class="o">[</span>root@c2 ~<span class="o">]</span><span class="c1"># lsblk </span>

<span class="c1">#vgextend 命令把sdd物理卷加入centos卷组（sdd已经是物理卷了，centos是卷组名称）</span>
<span class="o">[</span>root@localhost /<span class="o">]</span><span class="c1"># vgextend centos /dev/sdd</span>

<span class="c1">#/dev/centos/root这个逻辑卷增加50G</span>
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># lvextend -L +50G /dev/centos/root  </span>

<span class="c1">#但是df查看容量没有加载，这个时候需要刷新才行</span>
<span class="o">[</span>root@c2 ~<span class="o">]</span><span class="c1"># df -hT / </span>
文件系统                类型  容量  已用  可用 已用% 挂载点
/dev/mapper/centos-root ext4  7.8G  6.9G  483M   94% /

<span class="c1">#查看你的逻辑卷是什么文件系统类型，如果是xfs文件系统，使用xfs_growfs命令扩展容量：</span>
xfs_growfs /dev/mysql/lv_data
<span class="c1">#查看你的逻辑卷是什么文件系统类型，如果是ext4文件系统，使用resize2fs命令扩展容量：</span>
resize2fs /dev/root_vg/root
</code></pre></td></tr></table>
</div>
</div><h2 id="lv缩容">lv缩容</h2>
<p><strong>缩容lv一般是腾出空间给同vg的其他lv，这并不是一种安全的做法，一般情况下没有人会这么干，一般当lv卷磁盘空间满的时候，会加磁盘来扩容，而不是从同vg下的其他lv腾空间出来，这里仅做出示例：</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">umount /dev/mapper/my_data-lv_data				<span class="c1">#卸载lv</span>
e2fsck -f /dev/mapper/my_data-lv_data			<span class="c1">#先扫描、检查磁盘在执行resize2fs，不然它会提示你先执行e2fsck -f命令的</span>
resize2fs /dev/mapper/my_data-lv_data 100G		<span class="c1">#缩容文件系统到100G</span>
lvreduce -L 100G /dev/mapper/my_data-lv_data	<span class="c1">#缩容，lv到100G,此时vg就空闲了很多PE出来了，可以通过vgdisplay命令查看</span>
lvreduce -L -100G /dev/mapper/my_data-lv_data	<span class="c1">#缩容，lv缩减100G,此时vg就空闲了很多PE出来了，可以通过vgdisplay命令查看</span>
mount /dev/mapper/my_data-lv_data /my_data/		<span class="c1">#重新挂载，此时文件系统就是100G大小</span>

<span class="c1">#以上缩容发现，一个是需要卸载，这点可以影响业务，其次缩容后重新挂载，原来的文件仍存在，没有丢失。</span>

<span class="c1">#下面是一个例子</span>
/dev/mapper/vg--data-lv1T 1008G   77M  957G   1% /gpt1
/dev/mapper/vg--data-lv2   2.0T   81M  1.9T   1% /gpt2
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># vgs</span>
  VG      <span class="c1">#PV #LV #SN Attr   VSize   VFree</span>
  centos    <span class="m">1</span>   <span class="m">2</span>   <span class="m">0</span> wz--n- &lt;19.00g    <span class="m">0</span> 
  vg-data   <span class="m">1</span>   <span class="m">2</span>   <span class="m">0</span> wz--n-  &lt;3.00t    <span class="m">0</span> 
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># lvdisplay /dev/vg-data/lv1T /dev/vg-data/lv2</span>
  --- Logical volume ---
  LV Path                /dev/vg-data/lv1T
  LV Name                lv1T
  VG Name                vg-data
  LV UUID                oYtQ0a-hUQA-pVkK-e8iy-NFam-eRs4-PrMsZW
  LV Write Access        read/write
  LV Creation host, <span class="nb">time</span> kubernetes, 2023-03-29 10:20:33 +0800
  LV Status              available
  <span class="c1"># open                 1</span>
  LV Size                1.00 TiB
  Current LE             <span class="m">262144</span>
  Segments               <span class="m">1</span>
  Allocation             inherit
  Read ahead sectors     auto
  - currently <span class="nb">set</span> to     <span class="m">8192</span>
  Block device           253:2
   
  --- Logical volume ---
  LV Path                /dev/vg-data/lv2
  LV Name                lv2
  VG Name                vg-data
  LV UUID                APJ81S-hOEC-LCfp-Oamo-5OTk-C8pA-GLhN2L
  LV Write Access        read/write
  LV Creation host, <span class="nb">time</span> kubernetes, 2023-03-29 10:21:08 +0800
  LV Status              available
  <span class="c1"># open                 1</span>
  LV Size                &lt;2.00 TiB
  Current LE             <span class="m">524287</span>
  Segments               <span class="m">1</span>
  Allocation             inherit
  Read ahead sectors     auto
  - currently <span class="nb">set</span> to     <span class="m">8192</span>
  Block device           253:3
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># </span>

<span class="c1">#打算对/gpt1缩减100G，腾出空间给/gpt2：</span>
umount  /gpt1
e2fsck -f  /dev/mapper/vg--data-lv1T
<span class="c1">#注意这条命令是缩减文件系统到多少G，957-100=857</span>
resize2fs /dev/mapper/vg--data-lv1T  857G

<span class="c1">#重新挂载，现在是844G</span>
mount /dev/mapper/vg--data-lv1T /gpt1/
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># df -h</span>
Filesystem                 Size  Used Avail Use% Mounted on
/dev/mapper/vg--data-lv1T  844G   77M  801G   1% /gpt1


<span class="c1"># 文件系统缩减了但是lv没有缩减呀，你看看：</span>
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># lvdisplay /dev/mapper/vg--data-lv1T</span>
  --- Logical volume ---
  LV Path                /dev/vg-data/lv1T
  LV Name                lv1T
  VG Name                vg-data
  LV UUID                oYtQ0a-hUQA-pVkK-e8iy-NFam-eRs4-PrMsZW
  LV Write Access        read/write
  LV Creation host, <span class="nb">time</span> kubernetes, 2023-03-29 10:20:33 +0800
  LV Status              available
  <span class="c1"># open                 1</span>
  LV Size                1.00 TiB			<span class="c1">#和没缩减文件系统时一模一样</span>
  Current LE             262144			<span class="c1">#和没缩减文件系统时一模一样</span>
  Segments               1	
  Allocation             inherit
  Read ahead sectors     auto
  - currently <span class="nb">set</span> to     <span class="m">8192</span>
  Block device           253:2
   
<span class="c1"># 所以现在开始缩减lv,这里我们写-100G</span>
lvresize -L -100G  /dev/vg-data/lv1T

<span class="c1">#缩减成功，但是好像不对，lv显示924G，挂载之后的文件系统怎么才844G</span>
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># lvdisplay /dev/mapper/vg--data-lv1T</span>
  --- Logical volume ---
  LV Path                /dev/vg-data/lv1T
  LV Name                lv1T
  VG Name                vg-data
  LV UUID                oYtQ0a-hUQA-pVkK-e8iy-NFam-eRs4-PrMsZW
  LV Write Access        read/write
  LV Creation host, <span class="nb">time</span> kubernetes, 2023-03-29 10:20:33 +0800
  LV Status              available
  <span class="c1"># open                 1</span>
  LV Size                924.00 GiB
  Current LE             <span class="m">236544</span>
  Segments               <span class="m">1</span>
  Allocation             inherit
  Read ahead sectors     auto
  - currently <span class="nb">set</span> to     <span class="m">8192</span>
  Block device           253:2
 
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># vgs	#vg多了100G</span>
  VG      <span class="c1">#PV #LV #SN Attr   VSize   VFree  </span>
  vg-data   <span class="m">1</span>   <span class="m">2</span>   <span class="m">0</span> wz--n-  &lt;3.00t 100.00g
  
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># df -h /dev/vg-data/lv1T</span>
Filesystem                 Size  Used Avail Use% Mounted on
/dev/mapper/vg--data-lv1T  844G   77M  801G   1% /gpt1
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># 重新卸载重新挂载也是一样的，怎么回事？</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="5删除逻辑卷删除卷组">5、删除逻辑卷、删除卷组</h2>
<p>一般不会这样干，这里只做示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># umount  /dev/mapper/my_data-lv_data			#删除一个lv之前必须先卸载文件系统</span>
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># lvremove /dev/my_data/lv_data				#删除逻辑卷,如果不知道lv的路径，可以通过lvdisplay命令查看</span>
Do you really want to remove active logical volume my_data/lv_data? <span class="o">[</span>y/n<span class="o">]</span>: y
  Logical volume <span class="s2">&#34;lv_data&#34;</span> successfully removed




root@localhost ~<span class="o">]</span><span class="c1"># vgremove  my_data					#删除整个卷组</span>
Do you really want to remove volume group <span class="s2">&#34;my_data&#34;</span> containing <span class="m">1</span> logical volumes? <span class="o">[</span>y/n<span class="o">]</span>: y
  Volume group <span class="s2">&#34;my_data&#34;</span> is removed







<span class="c1">#删除物理卷，该物理卷必须从vg中卸载下来，使用vgreduce my_data /dev/sdd1卸载即可</span>
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># pvremove /dev/sdd1</span>
  Removed <span class="s2">&#34;/dev/sdd1&#34;</span> from volume group <span class="s2">&#34;my_data&#34;</span>
</code></pre></td></tr></table>
</div>
</div><p>最后献上这篇博客的<a href="https://blog.csdn.net/MssGuo/article/details/120473476" target="_blank" rel="noopener noreffer">参考文章</a>
</p>
]]></description>
</item>
</channel>
</rss>
