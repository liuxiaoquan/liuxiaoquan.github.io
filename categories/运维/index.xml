<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>运维 - 分类 - 在阅读中遇见自己</title>
        <link>https://freerun.site/categories/%E8%BF%90%E7%BB%B4/</link>
        <description>运维 - 分类 - 在阅读中遇见自己</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>823715972@qq.com (Ylimhs)</managingEditor>
            <webMaster>823715972@qq.com (Ylimhs)</webMaster><lastBuildDate>Mon, 20 May 2024 16:48:38 &#43;0800</lastBuildDate><atom:link href="https://freerun.site/categories/%E8%BF%90%E7%BB%B4/" rel="self" type="application/rss+xml" /><item>
    <title>Liunx系统分区与扩容</title>
    <link>https://freerun.site/liunx%E7%B3%BB%E7%BB%9F%E5%88%86%E5%8C%BA%E4%B8%8E%E6%89%A9%E5%AE%B9/</link>
    <pubDate>Mon, 20 May 2024 16:48:38 &#43;0800</pubDate>
    <author>Ylimhs</author>
    <guid>https://freerun.site/liunx%E7%B3%BB%E7%BB%9F%E5%88%86%E5%8C%BA%E4%B8%8E%E6%89%A9%E5%AE%B9/</guid>
    <description><![CDATA[<h2 id="1挂载目录">1、挂载目录</h2>
<p>注释：xfs和ext4是Linux操作系统中常见的两种文件系统</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1">#格式化文件系统</span>
mkfs.ext4 /dev/sdb

<span class="c1">#查看文件系统</span>
blkid /dev/sdb

<span class="c1">#挂载分区到目录</span>
vim /etc/fstab 
<span class="c1">#把这一段写入fstab文件：/dev/sdb /home ext4 defaults 0 0</span>
mount -a
</code></pre></td></tr></table>
</div>
</div><h2 id="2新磁盘创建卷组与逻辑卷并且挂载home目录">2、新磁盘创建卷组与逻辑卷并且挂载/home目录</h2>
<p><strong>只有lvm(逻辑卷才能扩容)，下图意思是：有9块物理硬盘，其中有6块硬盘组成一个卷组，然后这个卷组了20g给逻辑卷用：物理卷（PV）、卷组（VG）和逻辑卷（LV）</strong></p>
<p></p>
<h3 id="pvcreate-创建物理卷">pvcreate 创建物理卷</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1">#首先是创建PV，上图中的9块硬盘，centos7以上系统直接可以省略这步骤 pvcreate /dev/sdb  /dev/sdc1</span>

<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># pvcreate  /dev/sdb /dev/sdc 				#直接将磁盘或某个分区转化为物理卷，</span>
  Physical volume <span class="s2">&#34;/dev/sdb&#34;</span> successfully created.
  Physical volume <span class="s2">&#34;/dev/sdc&#34;</span> successfully created.
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># pvs											#查看有哪些物理卷</span>
  PV         VG Fmt  Attr PSize  PFree
  /dev/sda2  cl lvm2 a--  11.00g 4.00m
  /dev/sdb      lvm2 ---   8.00g 8.00g
  /dev/sdc      lvm2 ---   6.00g 6.00g
</code></pre></td></tr></table>
</div>
</div><h3 id="vgcreate-创建卷组">vgcreate 创建卷组</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1">#创建卷组（虚拟硬盘）:vgcreate 卷组名 物理卷1 物理卷2 ..... </span>
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># vgcreate my_data /dev/sdb /dev/sdc	#创建一个名为my_data的卷组并将sdb和sdc物理卷加入其中，PE的大小默认为4M</span>
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># vgs	#查看卷组，下面有一个创建好的my_data卷组为1G</span>
  VG      <span class="c1">#PV #LV #SN Attr   VSize    VFree   </span>
  centos    <span class="m">1</span>   <span class="m">2</span>   <span class="m">0</span> wz--n-   &lt;9.00g    4.00m
  my_data   <span class="m">1</span>   <span class="m">0</span>   <span class="m">0</span> wz--n- 1020.00m 1020.00m 
</code></pre></td></tr></table>
</div>
</div><h3 id="lvcreate-创建逻辑卷">lvcreate 创建逻辑卷</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># lvcreate -n lv_data -L 500M  my_data		#在my_data卷组上创建一个名称叫lv_data的500M的逻辑卷</span>
  Logical volume <span class="s2">&#34;lv_data&#34;</span> created.
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># lvs</span>
  LV      VG      Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root    centos  -wi-ao----   7.99g                                                    
  swap    centos  -wi-ao----   1.00g                                                    
  lv_data my_data -wi-a----- 500.00m  
</code></pre></td></tr></table>
</div>
</div><p><strong>重点：</strong>
当我们lvcreate创建一个逻辑卷的时候，其实相当于生成了一个磁盘设备文件，这是由lvm的mapper机制决定，Linux会新建两个软链接文件，如<code>/dev/vg_name/lv_name、/dev/mapper/vg_name-lv_name</code>，而这2个文件都是指向<code>/dev/dm-X</code> 块设备文件的，所以，当我们使用<code>df -h</code>看到的<code>/dev/mapper/vg_name-lv_name</code>的时候，这个其实就是和<code>/dev/vg_name/lv_name</code>一样的，都是指向<code>/dev/dm-X</code> 块设备文件的。</p>
<h3 id="mkfs-格式化分区并创建文件系统">mkfs 格式化分区并创建文件系统</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># mkfs.ext4 /dev/sdb  #格式化磁盘分区为ext4文件系统，这一步也可以忽略</span>
mke2fs 1.42.9 <span class="o">(</span>28-Dec-2013<span class="o">)</span>
/dev/sdb is entire device, not just one partition!

<span class="c1">#对上面刚才创建的lv进行格式化并创建ext4类型的文件系统</span>
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># mkfs.ext4 /dev/my_data/lv_data  </span>

<span class="c1">#挂载分区到目录</span>
vim /etc/fstab 
<span class="c1">#把这一段写入fstab文件：/dev/my_data/lv_data /home ext4 defaults 0 0</span>
mount -a

df -hT
</code></pre></td></tr></table>
</div>
</div><h2 id="3linux系统扩容lvm磁盘空间">3、Linux系统扩容Lvm磁盘空间</h2>
<p><strong>扩容步骤为：先扩容卷组 -&gt; 再扩容逻辑卷 -&gt;刷新文件系统</strong></p>
<h3 id="vgextend-扩容卷组即把物理卷加入卷组">vgextend 扩容卷组，即把物理卷加入卷组</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># vgs       #还剩下520M的容量</span>
  VG      <span class="c1">#PV #LV #SN Attr   VSize    VFree  </span>
  centos    <span class="m">1</span>   <span class="m">2</span>   <span class="m">0</span> wz--n-   &lt;9.00g   4.00m
  my_data   <span class="m">1</span>   <span class="m">1</span>   <span class="m">0</span> wz--n- 1020.00m 520.00m
  
<span class="c1">#vgextend 命令把sdd1物理卷加入my_data卷组（sdd1已经是物理卷了，my_data是卷组名称）</span>
<span class="o">[</span>root@localhost /<span class="o">]</span><span class="c1"># vgextend my_data /dev/sdd1	</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="lvextend扩容逻辑卷即把卷组空间加入到逻辑卷中">lvextend扩容逻辑卷，即把卷组空间加入到逻辑卷中</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1">#/dev/my_data/lv_data这个逻辑卷增加520M</span>
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># lvextend -L +520M /dev/my_data/lv_data  </span>
	Size of logical volume my_data/lv_data changed from 500.00 MiB <span class="o">(</span><span class="m">125</span> extents<span class="o">)</span> to 1020.00 MiB <span class="o">(</span><span class="m">255</span> extents<span class="o">)</span>.
  Logical volume my_data/lv_data successfully resized.

<span class="c1">#这个时候发现lv_data这个逻辑卷已经扩大到1G</span>
<span class="o">[</span>root@c2 ~<span class="o">]</span><span class="c1"># lvs </span>
  LV      VG      Attr       LSize    Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root    centos  -wi-ao----    7.99g                                                    
  swap    centos  -wi-ao----    1.00g                                                    
  lv_data my_data -wi-ao---- 1020.00m  

<span class="c1">#但是df查看容量没有加载，这个时候需要刷新才行</span>
<span class="o">[</span>root@c2 ~<span class="o">]</span><span class="c1"># df -hT /home/ </span>
文件系统                    类型  容量  已用  可用 已用% 挂载点
/dev/mapper/my_data-lv_data ext4  477M  2.3M  445M    1% /home

<span class="c1">#查看你的逻辑卷是什么文件系统类型，如果是xfs文件系统，使用xfs_growfs命令扩展容量：</span>
xfs_growfs /dev/mysql/lv_data
<span class="c1">#查看你的逻辑卷是什么文件系统类型，如果是ext4文件系统，使用resize2fs命令扩展容量：</span>
resize2fs /dev/root_vg/root
</code></pre></td></tr></table>
</div>
</div><h2 id="4扩容根分区">4、扩容根分区</h2>
<p><strong>注释：首先确定根分区是不是lvm卷，如果不是那就不允许扩容</strong></p>
<p><strong>扩容步骤为：先扩容卷组 -&gt; 再扩容逻辑卷 -&gt;刷新文件系统</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1">#查询卷组，查看卷组名为centos的卷组是否有容量扩容，下面显示vFree为4.00M,显然已经不够扩容</span>
<span class="o">[</span>root@c2 ~<span class="o">]</span><span class="c1"># vgs   </span>
  VG      <span class="c1">#PV #LV #SN Attr   VSize    VFree</span>
  centos    <span class="m">1</span>   <span class="m">2</span>   <span class="m">0</span> wz--n-   &lt;9.00g 4.00m
<span class="c1">#查询是否有分区给卷组扩容</span>
<span class="o">[</span>root@c2 ~<span class="o">]</span><span class="c1"># lsblk </span>

<span class="c1">#vgextend 命令把sdd物理卷加入centos卷组（sdd已经是物理卷了，centos是卷组名称）</span>
<span class="o">[</span>root@localhost /<span class="o">]</span><span class="c1"># vgextend centos /dev/sdd</span>

<span class="c1">#/dev/centos/root这个逻辑卷增加50G</span>
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># lvextend -L +50G /dev/centos/root  </span>

<span class="c1">#但是df查看容量没有加载，这个时候需要刷新才行</span>
<span class="o">[</span>root@c2 ~<span class="o">]</span><span class="c1"># df -hT / </span>
文件系统                类型  容量  已用  可用 已用% 挂载点
/dev/mapper/centos-root ext4  7.8G  6.9G  483M   94% /

<span class="c1">#查看你的逻辑卷是什么文件系统类型，如果是xfs文件系统，使用xfs_growfs命令扩展容量：</span>
xfs_growfs /dev/mysql/lv_data
<span class="c1">#查看你的逻辑卷是什么文件系统类型，如果是ext4文件系统，使用resize2fs命令扩展容量：</span>
resize2fs /dev/root_vg/root
</code></pre></td></tr></table>
</div>
</div><h2 id="lv缩容">lv缩容</h2>
<p><strong>缩容lv一般是腾出空间给同vg的其他lv，这并不是一种安全的做法，一般情况下没有人会这么干，一般当lv卷磁盘空间满的时候，会加磁盘来扩容，而不是从同vg下的其他lv腾空间出来，这里仅做出示例：</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">umount /dev/mapper/my_data-lv_data				<span class="c1">#卸载lv</span>
e2fsck -f /dev/mapper/my_data-lv_data			<span class="c1">#先扫描、检查磁盘在执行resize2fs，不然它会提示你先执行e2fsck -f命令的</span>
resize2fs /dev/mapper/my_data-lv_data 100G		<span class="c1">#缩容文件系统到100G</span>
lvreduce -L 100G /dev/mapper/my_data-lv_data	<span class="c1">#缩容，lv到100G,此时vg就空闲了很多PE出来了，可以通过vgdisplay命令查看</span>
lvreduce -L -100G /dev/mapper/my_data-lv_data	<span class="c1">#缩容，lv缩减100G,此时vg就空闲了很多PE出来了，可以通过vgdisplay命令查看</span>
mount /dev/mapper/my_data-lv_data /my_data/		<span class="c1">#重新挂载，此时文件系统就是100G大小</span>

<span class="c1">#以上缩容发现，一个是需要卸载，这点可以影响业务，其次缩容后重新挂载，原来的文件仍存在，没有丢失。</span>

<span class="c1">#下面是一个例子</span>
/dev/mapper/vg--data-lv1T 1008G   77M  957G   1% /gpt1
/dev/mapper/vg--data-lv2   2.0T   81M  1.9T   1% /gpt2
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># vgs</span>
  VG      <span class="c1">#PV #LV #SN Attr   VSize   VFree</span>
  centos    <span class="m">1</span>   <span class="m">2</span>   <span class="m">0</span> wz--n- &lt;19.00g    <span class="m">0</span> 
  vg-data   <span class="m">1</span>   <span class="m">2</span>   <span class="m">0</span> wz--n-  &lt;3.00t    <span class="m">0</span> 
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># lvdisplay /dev/vg-data/lv1T /dev/vg-data/lv2</span>
  --- Logical volume ---
  LV Path                /dev/vg-data/lv1T
  LV Name                lv1T
  VG Name                vg-data
  LV UUID                oYtQ0a-hUQA-pVkK-e8iy-NFam-eRs4-PrMsZW
  LV Write Access        read/write
  LV Creation host, <span class="nb">time</span> kubernetes, 2023-03-29 10:20:33 +0800
  LV Status              available
  <span class="c1"># open                 1</span>
  LV Size                1.00 TiB
  Current LE             <span class="m">262144</span>
  Segments               <span class="m">1</span>
  Allocation             inherit
  Read ahead sectors     auto
  - currently <span class="nb">set</span> to     <span class="m">8192</span>
  Block device           253:2
   
  --- Logical volume ---
  LV Path                /dev/vg-data/lv2
  LV Name                lv2
  VG Name                vg-data
  LV UUID                APJ81S-hOEC-LCfp-Oamo-5OTk-C8pA-GLhN2L
  LV Write Access        read/write
  LV Creation host, <span class="nb">time</span> kubernetes, 2023-03-29 10:21:08 +0800
  LV Status              available
  <span class="c1"># open                 1</span>
  LV Size                &lt;2.00 TiB
  Current LE             <span class="m">524287</span>
  Segments               <span class="m">1</span>
  Allocation             inherit
  Read ahead sectors     auto
  - currently <span class="nb">set</span> to     <span class="m">8192</span>
  Block device           253:3
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># </span>

<span class="c1">#打算对/gpt1缩减100G，腾出空间给/gpt2：</span>
umount  /gpt1
e2fsck -f  /dev/mapper/vg--data-lv1T
<span class="c1">#注意这条命令是缩减文件系统到多少G，957-100=857</span>
resize2fs /dev/mapper/vg--data-lv1T  857G

<span class="c1">#重新挂载，现在是844G</span>
mount /dev/mapper/vg--data-lv1T /gpt1/
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># df -h</span>
Filesystem                 Size  Used Avail Use% Mounted on
/dev/mapper/vg--data-lv1T  844G   77M  801G   1% /gpt1


<span class="c1"># 文件系统缩减了但是lv没有缩减呀，你看看：</span>
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># lvdisplay /dev/mapper/vg--data-lv1T</span>
  --- Logical volume ---
  LV Path                /dev/vg-data/lv1T
  LV Name                lv1T
  VG Name                vg-data
  LV UUID                oYtQ0a-hUQA-pVkK-e8iy-NFam-eRs4-PrMsZW
  LV Write Access        read/write
  LV Creation host, <span class="nb">time</span> kubernetes, 2023-03-29 10:20:33 +0800
  LV Status              available
  <span class="c1"># open                 1</span>
  LV Size                1.00 TiB			<span class="c1">#和没缩减文件系统时一模一样</span>
  Current LE             262144			<span class="c1">#和没缩减文件系统时一模一样</span>
  Segments               1	
  Allocation             inherit
  Read ahead sectors     auto
  - currently <span class="nb">set</span> to     <span class="m">8192</span>
  Block device           253:2
   
<span class="c1"># 所以现在开始缩减lv,这里我们写-100G</span>
lvresize -L -100G  /dev/vg-data/lv1T

<span class="c1">#缩减成功，但是好像不对，lv显示924G，挂载之后的文件系统怎么才844G</span>
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># lvdisplay /dev/mapper/vg--data-lv1T</span>
  --- Logical volume ---
  LV Path                /dev/vg-data/lv1T
  LV Name                lv1T
  VG Name                vg-data
  LV UUID                oYtQ0a-hUQA-pVkK-e8iy-NFam-eRs4-PrMsZW
  LV Write Access        read/write
  LV Creation host, <span class="nb">time</span> kubernetes, 2023-03-29 10:20:33 +0800
  LV Status              available
  <span class="c1"># open                 1</span>
  LV Size                924.00 GiB
  Current LE             <span class="m">236544</span>
  Segments               <span class="m">1</span>
  Allocation             inherit
  Read ahead sectors     auto
  - currently <span class="nb">set</span> to     <span class="m">8192</span>
  Block device           253:2
 
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># vgs	#vg多了100G</span>
  VG      <span class="c1">#PV #LV #SN Attr   VSize   VFree  </span>
  vg-data   <span class="m">1</span>   <span class="m">2</span>   <span class="m">0</span> wz--n-  &lt;3.00t 100.00g
  
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># df -h /dev/vg-data/lv1T</span>
Filesystem                 Size  Used Avail Use% Mounted on
/dev/mapper/vg--data-lv1T  844G   77M  801G   1% /gpt1
<span class="o">[</span>root@kubernetes ~<span class="o">]</span><span class="c1"># 重新卸载重新挂载也是一样的，怎么回事？</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="5删除逻辑卷删除卷组">5、删除逻辑卷、删除卷组</h2>
<p>一般不会这样干，这里只做示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># umount  /dev/mapper/my_data-lv_data			#删除一个lv之前必须先卸载文件系统</span>
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># lvremove /dev/my_data/lv_data				#删除逻辑卷,如果不知道lv的路径，可以通过lvdisplay命令查看</span>
Do you really want to remove active logical volume my_data/lv_data? <span class="o">[</span>y/n<span class="o">]</span>: y
  Logical volume <span class="s2">&#34;lv_data&#34;</span> successfully removed




root@localhost ~<span class="o">]</span><span class="c1"># vgremove  my_data					#删除整个卷组</span>
Do you really want to remove volume group <span class="s2">&#34;my_data&#34;</span> containing <span class="m">1</span> logical volumes? <span class="o">[</span>y/n<span class="o">]</span>: y
  Volume group <span class="s2">&#34;my_data&#34;</span> is removed







<span class="c1">#删除物理卷，该物理卷必须从vg中卸载下来，使用vgreduce my_data /dev/sdd1卸载即可</span>
<span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># pvremove /dev/sdd1</span>
  Removed <span class="s2">&#34;/dev/sdd1&#34;</span> from volume group <span class="s2">&#34;my_data&#34;</span>
</code></pre></td></tr></table>
</div>
</div><p>最后献上这篇博客的<a href="https://blog.csdn.net/MssGuo/article/details/120473476" target="_blank" rel="noopener noreffer">参考文章</a>
</p>
]]></description>
</item>
<item>
    <title>Iptables实战</title>
    <link>https://freerun.site/iptables%E5%AE%9E%E6%88%98/</link>
    <pubDate>Thu, 09 May 2024 15:04:42 &#43;0800</pubDate>
    <author>Ylimhs</author>
    <guid>https://freerun.site/iptables%E5%AE%9E%E6%88%98/</guid>
    <description><![CDATA[<p>注意:配置拒接策略时请配置好SSH连接端口，否则一旦配置失误，将无法再远程连接！！！！！</p>
<p>安装iptables服务</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">yum install iptables iptables-services -y
</code></pre></td></tr></table>
</div>
</div><p>启动iptables服务</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">service iptables start
</code></pre></td></tr></table>
</div>
</div><p>设置iptables开机自启动</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">systemctl <span class="nb">enable</span> iptables
</code></pre></td></tr></table>
</div>
</div><p>清除iptables所有规则</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">iptables -F
</code></pre></td></tr></table>
</div>
</div><p>添加规则，放开需要放开的端口(这里放开了tcp80端口)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">iptables -A INPUT -p tcp --dport <span class="m">80</span> -j ACCEPT
</code></pre></td></tr></table>
</div>
</div><p>添加规则，允许特定主机访问（这里允许1.1.1.1访问）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">iptables -A INPUT -s 1.1.1.1 -j ACCEPT
</code></pre></td></tr></table>
</div>
</div><p>添加规则，允许特定网段访问（这里允许1.1.1.0/24访问）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">iptables -A INPUT -s 1.1.1.0/24 -j ACCEPT
</code></pre></td></tr></table>
</div>
</div><p>添加规则，拒绝特定网段访问（这里拒绝1.1.1.0/24访问）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">iptables -A INPUT -s 1.1.1.0/24 -j DROP
</code></pre></td></tr></table>
</div>
</div><p>添加规则，允许特定主机访问特定端口（这里允许1.1.1.1访问tcp22端口）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">iptables -A INPUT -s 1.1.1.1 -p tcp --dport <span class="m">22</span> -j ACCEPT
</code></pre></td></tr></table>
</div>
</div><p>查看规则及规则号</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">iptables -nL --line-number
</code></pre></td></tr></table>
</div>
</div><p>删除规则5</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">iptables -D INPUT <span class="m">5</span>
</code></pre></td></tr></table>
</div>
</div><p>插入规则，插入到规则1之前</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">iptables -I INPUT <span class="m">1</span> -p tcp --dport <span class="m">8080</span> -j ACCEPT
</code></pre></td></tr></table>
</div>
</div><p>添加完规则后保存</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">service iptables save
<span class="c1">#如果没有service可以用以下命令</span>
sudo iptables-save &gt; /etc/sysconfig/iptables
</code></pre></td></tr></table>
</div>
</div><p>重启iptables服务</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">service iptables restart
<span class="c1">#或者：systemctl restart iptabels</span>
</code></pre></td></tr></table>
</div>
</div><p>#案例：允许192.2.0.2 和 198.3.22.1的访问，其他ip禁止访问
第一步：放开所有 IP 地址的 SSH 连接，一定要先执行这个，不然远程连接会断开</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">sudo iptables -A INPUT -p tcp --dport <span class="m">22</span> -j ACCEPT 
</code></pre></td></tr></table>
</div>
</div><p>第二步：允许192.2.0.2 和 198.3.22.1的访问</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">iptables -A INPUT -s 192.2.0.2 -j ACCEPT
iptables -A INPUT -s 198.3.22.1 -j ACCEPT
</code></pre></td></tr></table>
</div>
</div><p>第三步：禁止外部访问本机</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1">#禁止INPUT链处理进入本地主机的数据包</span>
sudo iptables -P INPUT DROP  
<span class="c1">#禁止本地转发数据包出去，这个可以不用设在</span>
<span class="c1">#sudo iptables -P FORWARD DROP  </span>

<span class="c1">#放通本地访问外部数据，这个默认开启也不用设置</span>
<span class="c1">#sudo iptables -P OUTPUT ACCEPT</span>
</code></pre></td></tr></table>
</div>
</div><p>第四步：保存</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">sudo iptables-save &gt; /etc/sysconfig/iptables
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>VMware 扩展Ubuntu虚拟机的磁盘空间</title>
    <link>https://freerun.site/vmware-%E6%89%A9%E5%B1%95ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/</link>
    <pubDate>Wed, 28 Dec 2022 23:54:53 &#43;0800</pubDate>
    <author>Ylimhs</author>
    <guid>https://freerun.site/vmware-%E6%89%A9%E5%B1%95ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/</guid>
    <description><![CDATA[<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>虚拟机软件版本</td>
<td>VMware® Workstation 15 Player</td>
<td></td>
</tr>
<tr>
<td>Ubuntu镜像版本</td>
<td>Ubuntu 20.04.1 LTS</td>
<td></td>
</tr>
<tr>
<td>具体操作简介</td>
<td>将虚拟机磁盘空间由30GB扩展到40GB，并进行磁盘分区</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="1-准备工作">1. 准备工作</h2>
<p>使用 <code>df -h</code> 指令查看一下磁盘空间的使用情况</p>
<p></p>
<p>可以看到，现在挂载的磁盘空间为29G，用了17G，还剩11G。
下面开始扩展磁盘空间。</p>
<h2 id="2-编辑虚拟机设置">2. 编辑虚拟机设置</h2>
<p>打开虚拟机，找到待扩展的虚拟机，点击<code>“编辑虚拟机设置”</code>选项。</p>
<p></p>
<p>在虚拟机设置窗口的<code>“硬件”</code>界面，选择<code>“硬盘”</code>选项，点击<code>“扩展”</code>。在弹出来的窗口中，输入你想要扩展到的磁盘空间。我想扩展到40GB，所以就填写了40。</p>
<p></p>
<h2 id="3-将ubuntuhttpssocsdnnetsosearchqubuntuspm1001210130017020系统重新分区">3. 将<a href="https://so.csdn.net/so/search?q=Ubuntu&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreffer">Ubuntu</a>
系统重新分区</h2>
<p>为了能够更方便地重新分区，可以下载一个分区管理软件<code>GParted</code>
在虚拟机中打开终端，输入<code>sudo apt-get install gparted</code>指令，安装<code>GParted</code>软件。</p>
<p>安装完成后，就可以对磁盘进行分区了。
点击该软件，进行磁盘分区。</p>
<p></p>
<p>打开软件后，可以看到目前虚拟机的磁盘情况。</p>
<p></p>
<p>可以看到，现在我的虚拟机有一块29.5GB的磁盘<code>/dev/sda5</code>以及一块10GB未分配的磁盘，而且<code>/dev/sda5</code>被挂载到了根目录下。
现在就可以为<code>/dev/sda5</code>扩展空间了。右键单击<code>/dev/sda2</code>的分区，选择<code>Resize/Move</code>选项</p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p>可以看到，磁盘空间已经变为了39GB</p>
]]></description>
</item>
<item>
    <title>免密登陆</title>
    <link>https://freerun.site/%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86/</link>
    <pubDate>Wed, 28 Dec 2022 23:12:53 &#43;0800</pubDate>
    <author>Ylimhs</author>
    <guid>https://freerun.site/%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86/</guid>
    <description><![CDATA[<p><code>ssh-keygen</code>一路回车,主要是用来免密通信的</p>
<p><code>ssh-copy-id </code>172.16.24.220 需要输入对应主节的root密码</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>root@chm log<span class="o">]</span><span class="c1"># ssh-keygen </span>
Generating public/private rsa key pair.
Enter file in which to save the key <span class="o">(</span>/root/.ssh/id_rsa<span class="o">)</span>: 
Enter passphrase <span class="o">(</span>empty <span class="k">for</span> no passphrase<span class="o">)</span>: 
Enter same passphrase again: 
Your identification has been saved in /root/.ssh/id_rsa.
Your public key has been saved in /root/.ssh/id_rsa.pub.
The key fingerprint is:
7f:69:87:cf:28:fe:8b:19:55:a7:d0:c9:aa:6d:05:0c root@chm
The key<span class="s1">&#39;s randomart image is:
</span><span class="s1">+--[ RSA 2048]----+
</span><span class="s1">|          E      |
</span><span class="s1">|           o o . |
</span><span class="s1">|            + = .|
</span><span class="s1">|             = o |
</span><span class="s1">|        S   o o  |
</span><span class="s1">|         . + +   |
</span><span class="s1">|          + B .  |
</span><span class="s1">|          .B =   |
</span><span class="s1">|         .+o+.o  |
</span><span class="s1">+-----------------+
</span><span class="s1">[root@chm log]# 
</span><span class="s1">[root@chm log]# ssh-copy-id 172.16.24.220
</span><span class="s1">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
</span><span class="s1">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
</span><span class="s1">root@172.16.24.220&#39;</span>s password: 
 
Number of key<span class="o">(</span>s<span class="o">)</span> added: <span class="m">1</span>
 
Now try logging into the machine, with:   <span class="s2">&#34;ssh &#39;172.16.24.220&#39;&#34;</span>
and check to make sure that only the key<span class="o">(</span>s<span class="o">)</span> you wanted were added.
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>Centos 7挂载本地yum源</title>
    <link>https://freerun.site/centos-7%E6%8C%82%E8%BD%BD%E6%9C%AC%E5%9C%B0yum%E6%BA%90/</link>
    <pubDate>Mon, 30 May 2022 11:45:21 &#43;0800</pubDate>
    <author>Ylimhs</author>
    <guid>https://freerun.site/centos-7%E6%8C%82%E8%BD%BD%E6%9C%AC%E5%9C%B0yum%E6%BA%90/</guid>
    <description><![CDATA[<h1 id="1检查yum源">1、检查yum源</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">yum list <span class="c1">#查看是否能打开yum源</span>
cat /etc/redhat-release <span class="c1">#查看系统版本</span>

</code></pre></td></tr></table>
</div>
</div><h1 id="2上传对于的iso镜像包">2、上传对于的iso镜像包</h1>
<p><code>使用winscp上传iso文件到/home/iso/ </code>目录随便</p>
<h1 id="3创建挂载点并挂载镜像文件">3、创建挂载点并挂载镜像文件</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">mkdir /media/cdrom 					<span class="c1">#创建挂载点的目录</span>

<span class="c1">#备注： -o是参数，loop是把一个文件当成硬盘分区mount挂着到目录</span>
mount -o  loop /home/iso/CentOS-7-x86_64-DVD-1708.iso   /media/cdrom

df -HT			<span class="c1">#查看镜像是否挂载成功</span>
</code></pre></td></tr></table>
</div>
</div><h1 id="4修改yum源的配置文件">4、修改yum源的配置文件</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nb">cd</span> /etc/yum.repos.d/		
ls
mkdir bak/			
mv ./*.repo  ./bak/
vim  CentOS-local.repo 		<span class="c1">#修改配置文件，内容如下</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>my<span class="o">]</span>
<span class="nv">name</span><span class="o">=</span>my
<span class="nv">baseurl</span><span class="o">=</span>file:///media/cdrom
<span class="nv">enabled</span><span class="o">=</span><span class="m">1</span>
<span class="nv">gpgcheck</span><span class="o">=</span><span class="m">0</span>
<span class="nv">gpgkey</span><span class="o">=</span>file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
</code></pre></td></tr></table>
</div>
</div><h1 id="5清除缓存">5、清除缓存</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">yum clean all 
yum repolist all <span class="c1">#查看yum本地源是否启用</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>时间同步的问题和解决方法</title>
    <link>https://freerun.site/%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link>
    <pubDate>Thu, 07 Apr 2022 16:17:17 &#43;0800</pubDate>
    <author>Ylimhs</author>
    <guid>https://freerun.site/%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid>
    <description><![CDATA[<h1 id="时间同步的问题和解决方法">时间同步的问题和解决方法</h1>
<h2 id="一虚拟服务器时间同步设置">一、虚拟服务器时间同步设置</h2>
<p><strong>使用条件</strong>： 主机已经与授时服务器进行时间同步</p>
<p>配置VMware虚拟服务器的“同步客户机与主机时间”选项，实现虚拟服务器与主机的时间同步。</p>
<p>方法如下：</p>
<ul>
<li>启动VMware vClient 客户端</li>
<li>选择虚拟主机，打开编辑设置&ndash;&gt;选项&mdash;-&gt;vmware tools &mdash;-&gt;同步客户机时间与主机时间</li>
</ul>
<h2 id="二物理服务器时间同步设置">二、物理服务器时间同步设置</h2>
<h3 id="21-ntpdate工具的使用"><strong>2.1 ntpdate工具的使用</strong></h3>
<p><strong>使用条件：</strong> 服务器可访直接问互联网并且支持UDP协议</p>
<p><strong>在线安装</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">yum install ntpdate -y
</code></pre></td></tr></table>
</div>
</div><p><strong>离线安装</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">rpm -ivh ntpdate-4.2.6p5-28.el7.centos.x86_64.rpm
</code></pre></td></tr></table>
</div>
</div><p><strong>注意：</strong> 本文以centos 7.6的安装为基准，在其它版本中安装可能会出现兼容问题，导致不能成功安装。可到http://vault.centos.org/站点选择下载对应版本的安装包。</p>
<p><strong>手动测试</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">/usr/sbin/ntpdate ntp.ntsc.ac.cn  <span class="c1">#后边的域名或IP为授时服务器，ntp.ntsc.ac.cn为国家授时中心域名 </span>
/sbin/hwclock –w 					<span class="c1">#写入物理时钟</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>自动运行，在crontab的最后一行，添加脚本如下：</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1">#crontab –e </span>
<span class="c1">#每30分钟执行一次，如果是局域网内，请注意修改ntp.ntsc.ac.cn为对应的内网ntpd服务器IP地址。 </span>
*/30 * * * * /usr/sbin/ntpdate ntp.ntsc.ac.cn <span class="p">;</span>/sbin/hwclock -w &gt; /dev/null <span class="c1">#2&gt;&amp;1</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>验证crond执行时间同步的情况</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">cat /var/log/cron<span class="p">|</span>grep ntpdate
</code></pre></td></tr></table>
</div>
</div><h3 id="22-rdate工具的使用">2.2 rdate工具的使用</h3>
<p><strong>使用条件：</strong> 服务器在内网区，可访问互联网（可通过接入网关），但只支持TCP协议通信</p>
<p><strong>在线安装</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">yum install rdate -y
</code></pre></td></tr></table>
</div>
</div><p><strong>注意：</strong> rdate命令同时支持TCP和UDP通信协议，使用的time协议，但支持time协议的授时服务器不多。</p>
<p><strong>离线安装</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">rpm -ivh rdate-1.4-25.el7.x86_64.rpm
</code></pre></td></tr></table>
</div>
</div><p><strong>注意：</strong> 本文以centos 7.6的安装为基准，在其它版本中安装可能会出现兼容问题，导致不能成功安装。可到http://vault.centos.org/站点选择下载对应版本的安装包。</p>
<p><strong>自动运行</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1">#crontab –e </span>
<span class="c1"># 每30分钟执行一次 </span>
*/30 * * * * /usr/bin/rdate -s time.nist.gov <span class="p">;</span>/sbin/hwclock -w &gt; /dev/null <span class="c1">#2&gt;&amp;1</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="三服务器处于隔离网络时方法">三、服务器处于隔离网络时方法</h2>
<p><strong>情况1：</strong> 服务器处于隔离网络，但内网有授时服务器，此时可参照第二节的方法</p>
<p><strong>情况2：</strong> 服务器处于离网络时，无内网授时服务器，这种情况下，我们选择自建ntpd或chrony服务器</p>
<h3 id="31-ntpd服务端">3.1 ntpd服务端</h3>
<h4 id="311-ntp安装">3.1.1 ntp安装</h4>
<ul>
<li>在线安装</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">yum install ntp ntpdate -y
</code></pre></td></tr></table>
</div>
</div><ul>
<li>离线安装</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">rpm -ivh autogen-libopts-5.18-5.el7.x86_64.rpm ntp-4.2.6p5-28.el7.centos.x86_64.rpm ntpdate-4.2.6p5-28.el7.centos.x86_64.rpm
</code></pre></td></tr></table>
</div>
</div><p><strong>注意：</strong> 本文以centos 7.6的安装为基准，在其它版本中安装可能会出现兼容问题，导致不能成功安装。可到http://vault.centos.org/站点选择下载对应版本的安装包。</p>
<h4 id="312-ntpd服务器配置">3.1.2 ntpd服务器配置</h4>
<ul>
<li>修改配置/etc/ntp.conf文件，（此配置文件请按照实际的来修改，主要修改restrict的配置）</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">driftfile /var/lib/ntp/drift 
restrict default kod nomodify notrap nopeer noquery 
restrict 127.0.0.1 
restrict ::1 
restrict 192.168.0.0 mask 255.255.0.0 nomodify notrap <span class="c1">#对192.168.0.0/16网段授权访问 </span>
restrict 10.0.0.0 mask 255.0.0.0 nomodify notrap <span class="c1">#对10.0.0.0/8网段授权访问 </span>
restrict 172.16.1.100 mask 255.255.255.255 nomodify notrap <span class="c1">#只对IP为172.16.1.10授权访问 </span>
fudge 127.0.0.1 stratum <span class="m">10</span> <span class="c1">#设置本地时间级别是10，如果上级时间服务器均失效，对外发布本地时间。</span>
server 127.0.0.1 <span class="c1"># 如果公网NTP不可用时，将使用Local时间作为NTP服务提供给NTP Client。 </span>
server ntp.ntsc.ac.cn iburst prefer <span class="c1">#国家授时中心 </span>
server 0.centos.pool.ntp.org iburst 
server 1.centos.pool.ntp.org iburst 
server 2.centos.pool.ntp.org iburst 
server 3.centos.pool.ntp.org iburst 

includefile /etc/ntp/crypto/pw 
cdisable monitor
</code></pre></td></tr></table>
</div>
</div><ul>
<li>restrict参数</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">kod 使用kod技术防范“kiss of death”攻击 
ignore 拒绝任何NTP连接 
nomodify 用户端不能使用ntpc,ntpq修改时间服务器参数，可以进行网络校时 
noquery 用户端不能使用ntpc,ntpq查询时间服务器参数，可以进行网络校时 
notrap 不提供远程日志功能 
notrust 拒绝没有认证的客户端 
restrict ip 或者 restrict IP地址 + mask + 子网掩码 + 参数 例如:restrict default nomodify notrap nopeer noquery <span class="c1">#默认拒绝所有访问 只可以同步时间 </span>
restrict 211.71.14.254 mask 255.255.255.0 <span class="c1">#添加允许211.71.14.254/24网段访问 </span>
restrict 10.111.1.1 mask 255.0.0.0 nomodify <span class="c1">#添加10.0.0.0/8网段访问</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>server 参数</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">server    用于设定ntp同步时间的外网时间服务器 
prefer    默认上级时间服务器 
burst     当一个运程NTP服务器可用时，向它发送一系列的并发包进行检测。 
iburst    当一个运程NTP服务器不可用时，向它发送一系列的并发包进行检测
</code></pre></td></tr></table>
</div>
</div><h4 id="313-ntpd启动和验证">3.1.3 ntpd启动和验证</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">systemctl <span class="nb">enable</span> ntpd 
systemctl start ntpd
</code></pre></td></tr></table>
</div>
</div><ul>
<li>验证ntpd运行情况</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>root@localhost packages<span class="o">]</span><span class="c1"># netstat -nap|grep ntpd </span>
udp 	<span class="m">0</span> 	<span class="m">0</span> 192.168.56.101:123 	  	0.0.0.0:* 			16037/ntpd 
udp 	<span class="m">0</span> 	<span class="m">0</span> 127.0.0.1:123 		  	0.0.0.0:* 			16037/ntpd 
udp 	<span class="m">0</span> 	<span class="m">0</span> 0.0.0.0:123 			  	0.0.0.0:* 			16037/ntpd 
udp6 	<span class="m">0</span> 	<span class="m">0</span> fe80::1c7b:80ff:fe2:123 	:::* 				16037/ntpd 
udp6 	<span class="m">0</span> 	<span class="m">0</span> ::1:123 				  	:::* 				16037/ntpd 
udp6 	<span class="m">0</span> 	<span class="m">0</span> fe80::a00:27ff:fe46:123 	:::* 				16037/ntpd 
udp6 	<span class="m">0</span> 	<span class="m">0</span> :::123 				  	:::* 				16037/ntpd
</code></pre></td></tr></table>
</div>
</div><h4 id="314-ntpdate客户端安装">3.1.4 ntpdate客户端安装</h4>
<p>请参考第二节的ntpdate工具的使用</p>
<p>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-分割线&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-</p>
<h3 id="32-chrony服务端">3.2 chrony服务端</h3>
<h4 id="321-chrony安装">3.2.1 chrony安装</h4>
<ul>
<li>在线安装(chrony需要在所有服务端和客户端中执行安装)</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">yum install chrony -y
</code></pre></td></tr></table>
</div>
</div><ul>
<li>离线安装</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">rpm -ivh chrony-3.2-2.el7.x86_64.rpm
</code></pre></td></tr></table>
</div>
</div><p><strong>注意：</strong> 本文以centos 7.6的安装为基准，在其它版本中安装可能会出现兼容问题，导致不能成功安装。可到http://vault.centos.org/站点选择下载对应版本的安装包。</p>
<h4 id="322-chrony服务器配置">3.2.2 chrony服务器配置</h4>
<ul>
<li>修改配置/etc/chrony.conf文件 （带注释的为重要配置）</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">server ntp.ntsc.ac.cn iburst <span class="c1">#国家授时中心 </span>
server 0.centos.pool.ntp.org iburst 
server 1.centos.pool.ntp.org iburst 
server 2.centos.pool.ntp.org iburst 
server 3.centos.pool.ntp.org iburst 

driftfile /var/lib/chrony/drift 
makestep 1.0 <span class="m">3</span> 
rtcsync 

allow 192.168.0.0/16 <span class="c1">#允许被访问的IP段，请根据实际情况修改 </span>
allow 192.168.56.101/24 <span class="c1">#允许被访问的IP </span>

<span class="nb">local</span> stratum <span class="m">10</span> <span class="c1">#设置本地时间级别是10，如果上级时间服务器均失效，对外发布本地时间。 </span>

logdir /var/log/chrony
</code></pre></td></tr></table>
</div>
</div><h4 id="323-chrony客户端配置">3.2.3 chrony客户端配置</h4>
<ul>
<li>修改配置文件/etc/chrony.conf（有注释行为重要配置）</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-sh" data-lang="sh">server 192.168.56.101 iburst <span class="c1">#根据实际情况，指向本地授时服务器的IP地址 </span>

driftfile /var/lib/chrony/drift 
makestep 1.0 <span class="m">3</span> 
rtcsync 
logdir /var/log/chrony
</code></pre></td></tr></table>
</div>
</div><h4 id="324-启动服务">3.2.4 启动服务</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-sh" data-lang="sh">systemctl <span class="nb">enable</span> chronyd.service <span class="c1">#开机自启动 </span>
systemctl start chronyd.service <span class="c1">#启动chrony </span>
systemctl status chronyd.service <span class="c1">#查看chrony服务状态</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="325-验证时间同步状态">3.2.5 验证时间同步状态</h4>
<ul>
<li>MS列中包含^*的行，指明NTP服务当前同步的服务器。当前同步的源为114.118.7.163：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># chronyc sources </span>
<span class="m">210</span> Number of <span class="nv">sources</span> <span class="o">=</span> <span class="m">2</span> 
MS Name/IP address 			Stratum Poll Reach LastRx Last <span class="nv">sample</span> <span class="o">===============================================================================</span> 
^- stratum2-1.ntp.sea03.us.&gt; 	<span class="m">2</span> 	<span class="m">6</span> 	<span class="m">377</span> 	<span class="m">6</span> 	+40ms<span class="o">[</span> +40ms<span class="o">]</span> +/- 160ms 
^* 114.118.7.163 				<span class="m">2</span> 	<span class="m">6</span> 	<span class="m">77</span> 		<span class="m">16</span> 	-908us<span class="o">[</span>-1190us<span class="o">]</span> +/- 51ms
</code></pre></td></tr></table>
</div>
</div><ul>
<li>查看当前时间是否准确，其中NTP synchronized: yes说明同步成功</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-sh" data-lang="sh"><span class="o">[</span>root@localhost ~<span class="o">]</span><span class="c1"># timedatectl </span>
		Local time: 四 2019-05-30 13:25:29 CST 
	Universal time: 四 2019-05-30 05:25:29 UTC 
		  RTC time: 三 2019-05-29 11:57:46 
		 Time zone: Asia/Shanghai <span class="o">(</span>CST, +0800<span class="o">)</span> 
	   NTP enabled: yes 
  NTP synchronized: yes 
   RTC in <span class="nb">local</span> TZ: no 
        DST active: n/a
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>Linux系统下提示磁盘空间满,但实际占用却很小</title>
    <link>https://freerun.site/linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%8F%90%E7%A4%BA%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E6%BB%A1%E4%BD%86%E5%AE%9E%E9%99%85%E5%8D%A0%E7%94%A8%E5%8D%B4%E5%BE%88%E5%B0%8F/</link>
    <pubDate>Wed, 16 Mar 2022 20:14:51 &#43;0800</pubDate>
    <author>Ylimhs</author>
    <guid>https://freerun.site/linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%8F%90%E7%A4%BA%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E6%BB%A1%E4%BD%86%E5%AE%9E%E9%99%85%E5%8D%A0%E7%94%A8%E5%8D%B4%E5%BE%88%E5%B0%8F/</guid>
    <description><![CDATA[<p>因为公司放在测试服务器上的服务比较多，磁盘经常性会满。以前满过几次，因为时间比较赶，每次只是草率的删掉一点log或者临时文件，到今天早上又发生一起事故，依然是磁盘空间满，看了一下好像没什么东西可以删了，才静下心来慢慢研究解决。</p>
<p>系统：Ubuntu14.04 x64
磁盘名称：/data
磁盘空间：200G</p>
<h4 id="错误描述">错误描述：</h4>
<pre><code>今早发现磁盘空间满，服务数据写不进数据库中，使用du -h --max-depth=1命令查看大文件，
发现文件只占100G，然而使用df -h 命令查看时，磁盘用了200G占用了百分之一百。其中100G的空间莫名其妙就没有了
</code></pre>
<h4 id="解决方法">解决方法：</h4>
<pre><code>用lsof检查后才发现原因是，有文件被删除，而进程还活着，因而造成还占用空间的现象。可以通过命令 lsof |grep deleted 来进行查看
</code></pre>
<p></p>
<p>把这些进程删掉就可以了，批量杀死进程命令</p>
<p>lsof |grep delete | grep -v grep | awk &lsquo;{print $2}&rsquo; | xargs kill -9</p>
<p>期间可能会等一段时间，等杀完后，重新 df -h 查看，磁盘空间多出来了87G</p>
<p></p>
]]></description>
</item>
<item>
    <title>普罗米修斯Prometheus</title>
    <link>https://freerun.site/prometheus-%E7%9B%91%E6%8E%A7%E9%83%A8%E7%BD%B2-last/</link>
    <pubDate>Wed, 20 Oct 2021 11:40:40 &#43;0800</pubDate>
    <author>Ylimhs</author>
    <guid>https://freerun.site/prometheus-%E7%9B%91%E6%8E%A7%E9%83%A8%E7%BD%B2-last/</guid>
    <description><![CDATA[<h2 id="1prometheus-主服务的下载与部署">1、prometheus 主服务的下载与部署</h2>
<h3 id="11创建安装目录和下载部署包并解压--下载x86安装包packageprometheus-2271linux-amd64targz">1.1创建安装目录和下载部署包并解压  <a href="/package/prometheus-2.27.1.linux-amd64.tar.gz" rel="">下载x86安装包</a>
</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">mkdir -p /data/monitor/prometheus
<span class="c1">#下载prometheus包，pakage文件夹中有下载好的包</span>
<span class="c1">#wget https://github.com/prometheus/prometheus/releases/download/v2.27.1/prometheus-2.27.1.linux-amd64.tar.gz</span>

<span class="c1">#解压prometheus包，并且解压后/data/monitor/prometheus里去除prometheus-2.27.1.linux-amd64文件目录</span>
tar -zxvf prometheus-2.27.1.linux-amd64.tar.gz -C /data/monitor/prometheus --strip-components <span class="m">1</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="12配置prometheus启动文件">1.2配置Prometheus启动文件</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">cat &gt; /etc/systemd/system/prometheus.service <span class="s">&lt;&lt; EOF
</span><span class="s">[Unit]
</span><span class="s">Description=prometheus Service
</span><span class="s">After=network.target
</span><span class="s">After=network-online.target
</span><span class="s">Wants=network-online.target
</span><span class="s">[Service]
</span><span class="s">Type=simple
</span><span class="s">WorkingDirectory=/data/monitor/prometheus
</span><span class="s">ExecStart=/data/monitor/prometheus/prometheus --config.file=prometheus.yml --web.enable-lifecycle --web.external-url=https://freerun.site/prometheus
</span><span class="s">ExecStop=/usr/bin/curl -X POST http://localhost:9090/prometheus/-/quit
</span><span class="s">Restart=on-failure
</span><span class="s">RestartSec=5
</span><span class="s">LimitNOFILE=65536
</span><span class="s">[Install]
</span><span class="s">WantedBy=multi-user.target
</span><span class="s">EOF</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>注：可以把启动文件直接放到/etc/systemd/system/目录下</strong>    <a href="/%e5%90%af%e5%8a%a8%e6%96%87%e4%bb%b6/prometheus.service" rel="">下载prometheus启动文件</a>
</p>
<p></p>
<h3 id="13-设置prometheus开机自启动">1.3 设置Prometheus开机自启动</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">systemctl daemon-reload
systemctl <span class="nb">enable</span> prometheus
systemctl start prometheus
</code></pre></td></tr></table>
</div>
</div><h3 id="14-测试验证prometheus是否启动成功访问-ip9090prometheus">1.4 测试，验证Prometheus是否启动成功：访问 IP:9090/prometheus/</h3>
<p></p>
<h2 id="2部署-exporter采集节点信息">2、部署 exporter采集节点信息</h2>
<h3 id="21创建安装目录和下载部署包并解压--下载x86安装包packagenode_exporter-112linux-amd64targz-使用-uname--a查询架构下载arm安装包packagenode_exporter-112linux-arm64targz">2.1创建安装目录和下载部署包并解压  <a href="/package/node_exporter-1.1.2.linux-amd64.tar.gz" rel="">下载x86安装包</a>
 使用 uname -a查询架构，<a href="/package/node_exporter-1.1.2.linux-arm64.tar.gz" rel="">下载arm安装包</a>
</h3>
<p><strong>(其他版本下载地址：https://github.com/prometheus/node_exporter/releases)</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">mkdir -p /data/monitor/node_exporter
<span class="c1">#wget https://github.com/prometheus/node_exporter/releases/download/v1.1.2/node_exporter-1.1.2.linux-amd64.tar.gz</span>
tar -zxvf node_exporter-1.1.2.linux-amd64.tar.gz -C /data/monitor/node_exporter --strip-components <span class="m">1</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="22配置node_exporter-服务">2.2配置node_exporter 服务</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">cat &gt; /etc/systemd/system/node_exporter.service <span class="s">&lt;&lt;EOF
</span><span class="s">[Unit]
</span><span class="s">Description=node-exporter Service
</span><span class="s">After=network.target
</span><span class="s">After=network-online.target
</span><span class="s">Wants=network-online.target
</span><span class="s">[Service]
</span><span class="s">Type=simple
</span><span class="s">WorkingDirectory=/data/monitor/node_exporter
</span><span class="s">ExecStart=/data/monitor/node_exporter/node_exporter --web.listen-address=0.0.0.0:9100
</span><span class="s">Restart=on-failure
</span><span class="s">RestartSec=5
</span><span class="s">LimitNOFILE=65536
</span><span class="s">[Install]
</span><span class="s">WantedBy=multi-user.target
</span><span class="s">EOF</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>注：可以把启动文件直接放到/etc/systemd/system/目录下</strong>     <a href="/%e5%90%af%e5%8a%a8%e6%96%87%e4%bb%b6/node-exporter.service" rel="">下载node-exporter启动文件</a>
</p>
<p></p>
<h3 id="23-设置node_exporter开机自启动">2.3 设置node_exporter开机自启动</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">systemctl daemon-reload
systemctl <span class="nb">enable</span> node-exporter
systemctl start node-exporter
</code></pre></td></tr></table>
</div>
</div><h3 id="24-测试验证node_exporter是否启动成功访问-ip9100">2.4 测试，验证node_exporter是否启动成功：访问 IP:9100</h3>
<p></p>
<h3 id="25-把-node_exporter-这个采集程序接配置到prometheusyml">2.5 把 node_exporter 这个采集程序接⼊配置到prometheus.yml</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-yaml" data-lang="yaml"><span class="c"># my global config</span><span class="w">
</span><span class="w"></span><span class="nt">global</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="nt">scrape_interval</span><span class="p">:</span><span class="w">     </span><span class="l">15s</span><span class="w"> </span><span class="c"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span><span class="w">
</span><span class="w">  </span><span class="nt">evaluation_interval</span><span class="p">:</span><span class="w"> </span><span class="l">15s</span><span class="w"> </span><span class="c"># Evaluate rules every 15 seconds. The default is every 1 minute.</span><span class="w">
</span><span class="w">  </span><span class="c"># scrape_timeout is set to the global default (10s).</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="c"># Alertmanager configuration</span><span class="w">
</span><span class="w"></span><span class="nt">alerting</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="nt">alertmanagers</span><span class="p">:</span><span class="w">
</span><span class="w">  </span>- <span class="nt">static_configs</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- <span class="nt">targets</span><span class="p">:</span><span class="w">
</span><span class="w">      </span><span class="c"># - alertmanager:9093</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="c"># Load rules once and periodically evaluate them according to the global &#39;evaluation_interval&#39;.</span><span class="w">
</span><span class="w"></span><span class="nt">rule_files</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="c"># - &#34;first_rules.yml&#34;</span><span class="w">
</span><span class="w">  </span><span class="c"># - &#34;second_rules.yml&#34;</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="c"># A scrape configuration containing exactly one endpoint to scrape:</span><span class="w">
</span><span class="w"></span><span class="c"># Here it&#39;s Prometheus itself.</span><span class="w">
</span><span class="w"></span><span class="nt">scrape_configs</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="c"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span><span class="w">
</span><span class="w">  </span>- <span class="nt">job_name</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;prometheus&#39;</span><span class="w">
</span><span class="w">
</span><span class="w">    </span><span class="c"># metrics_path defaults to &#39;/metrics&#39;</span><span class="w">
</span><span class="w">    </span><span class="c"># scheme defaults to &#39;http&#39;.</span><span class="w">
</span><span class="w">
</span><span class="w">    </span><span class="nt">static_configs</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- <span class="nt">targets</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s1">&#39;localhost:9090&#39;</span><span class="p">]</span><span class="w">
</span><span class="w">    
</span><span class="w">  </span>- <span class="nt">job_name</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;node-exporter&#39;</span><span class="w">
</span><span class="w">    
</span><span class="w">    </span><span class="nt">scrape_interval</span><span class="p">:</span><span class="w"> </span><span class="l">5s</span><span class="w">
</span><span class="w">    </span><span class="nt">static_configs</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- <span class="nt">targets</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s1">&#39;localhost:9100&#39;</span><span class="p">,</span><span class="s1">&#39;10.9.0.1:9100&#39;</span><span class="p">]</span><span class="w">
</span><span class="w">      </span><span class="nt">labels</span><span class="p">:</span><span class="w"> 
</span><span class="w">        </span><span class="nt">group</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;web&#39;</span><span class="w">
</span><span class="w">        </span><span class="nt">annotation</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;节点信息采集&#39;</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p><strong>导⼊node_exporter 后，重新载⼊配置 :</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">curl -X POST http://localhost:9090/prometheus/-/reload
</code></pre></td></tr></table>
</div>
</div><h2 id="3安装grafana展示">3、安装grafana展示</h2>
<h3 id="31-创建安装目录与下载部署包--下载x86安装包packagegrafana-757linux-amd64targz">3.1 创建安装目录与下载部署包  <a href="/package/grafana-7.5.7.linux-amd64.tar.gz" rel="">下载x86安装包</a>
</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">mkdir -p /data/monitor/grafana
<span class="c1">#wget https://dl.grafana.com/oss/release/grafana-7.5.7.linux-amd64.tar.gz</span>
tar -zxvf grafana-7.5.7.linux-amd64.tar.gz -C /data/monitor/grafana --strip-components <span class="m">1</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="32-配置grafana-服务--下载grafana启动文件启动文件grafanaservice">3.2 配置grafana 服务  <a href="/%e5%90%af%e5%8a%a8%e6%96%87%e4%bb%b6/grafana.service" rel="">下载grafana启动文件</a>
</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">cat &gt; /etc/systemd/system/grafana.service <span class="s">&lt;&lt;EOF
</span><span class="s">[Unit]
</span><span class="s">Description=grafana Service
</span><span class="s">After=network.target
</span><span class="s">After=network-online.target
</span><span class="s">Wants=network-online.target
</span><span class="s">[Service]
</span><span class="s">Type=simple
</span><span class="s">WorkingDirectory=/data/monitor/grafana
</span><span class="s">ExecStart=/data/monitor/grafana/bin/grafana-server web
</span><span class="s">Restart=on-failure
</span><span class="s">RestartSec=5
</span><span class="s">LimitNOFILE=65536
</span><span class="s">[Install]
</span><span class="s">WantedBy=multi-user.target
</span><span class="s">EOF</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="33-设置grafana-开机自启动">3.3 设置grafana 开机自启动</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">systemctl daemon-reload
systemctl <span class="nb">enable</span> grafanasy
stemctl start grafana
</code></pre></td></tr></table>
</div>
</div><h3 id="34-测试访问ip3000默认登录账户和密码都是admin进后界面如下">3.4 测试，访问：ip:3000（默认登录账户和密码都是admin，进⼊后界面如下）</h3>
<p></p>
<h2 id="4监控配置">4、监控配置</h2>
<h3 id="41-查看prometheus管理后台是否有采集到服务器的信息">4.1 查看Prometheus管理后台是否有采集到服务器的信息</h3>
<p></p>
<h3 id="42-配置grafana管理后台">4.2 配置grafana管理后台</h3>
<p></p>
<p></p>
<h3 id="43-导监控模板保存基础监控大盘官网下载地址httpsgrafanacomgrafanadashboards8919-注释与官网下载的基础监控大盘一样选择一个下载就行大盘配置基础监控大盘json">4.3 导⼊监控模板，保存。<a href="https://grafana.com/grafana/dashboards/8919" target="_blank" rel="noopener noreffer">基础监控大盘官网下载地址</a>
 注释：<a href="/%e5%a4%a7%e7%9b%98%e9%85%8d%e7%bd%ae/%e5%9f%ba%e7%a1%80%e7%9b%91%e6%8e%a7%e5%a4%a7%e7%9b%98.json" rel="">与官网下载的基础监控大盘一样，选择一个下载就行</a>
</h3>
<p></p>
<p></p>
<h3 id="44查看服务器的基础监控">4.4查看服务器的基础监控</h3>
<p></p>
<h2 id="5监控里约网关接调用情况">5、监控里约网关接⼝调用情况</h2>
<h3 id="1添加-es-数据源">1.添加 ES 数据源</h3>
<p></p>
<p></p>
<h3 id="2导-json-模板rio-sg-access日志大盘-1617280890686json下载日志大盘大盘配置rio-sg-access日志大盘-1617280890686json">2.导⼊ json 模板（Rio-SG-Access日志大盘-1617280890686.json）<a href="/%e5%a4%a7%e7%9b%98%e9%85%8d%e7%bd%ae/Rio-SG-Access%e6%97%a5%e5%bf%97%e5%a4%a7%e7%9b%98-1617280890686.json" rel="">下载日志大盘</a>
</h3>
<p></p>
<p></p>
<h2 id="6部署部-mysqld_exporter采集节点信息"><strong>6</strong>、部署部 mysqld_exporter采集节点信息</h2>
<h3 id="61在数据库服务器上执行以下操作在">6.1在数据库服务器上执行以下操作在</h3>
<h4 id="611官网下载包httpsprometheusiodownloadmysqld_exporter----注释与官网下载的安装包一样选一个下载就行packagemysqld_exporter-0130linux-amd64targz"><strong>6.1.1</strong><a href="https://prometheus.io/download/#mysqld_exporter" target="_blank" rel="noopener noreffer">官网下载包</a>
    注释：<a href="/package/mysqld_exporter-0.13.0.linux-amd64.tar.gz" rel="">与官网下载的安装包一样，选一个下载就行</a>
</h4>
<p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">mkdir -p /data/monitor/mysqld_exporter
tar -zxvf mysqld_exporter-0.13.0.linux-amd64.tar.gz -C /data/monitor/mysqld_exporter/ --strip-components <span class="m">1</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="612配置mycnf"><strong>6.1.2</strong>配置.my.cnf</h4>
<p>.my.cnf默认放置在启动用户的家目录，启动时无需指定；也可以随意放置在任意目录，在启动时通过 <code>--config.my-cnf={conf_dir}/.my.cnf</code>指定配置文件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1">#正常这里没有.my.cnf文件，需要创建.my.cnf文件</span>
vim /data/monitor/mysqld_exporter/.my.cnf
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">[client]
host=localhost
user=root
port=3306
password=root # 数据库密码
</code></pre></td></tr></table>
</div>
</div><h4 id="613启动">6.1.3启动</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="nb">cd</span> /data/monitor/mysqld_exporter/
<span class="c1">#创建start.sh脚本</span>
vim start.sh
</code></pre></td></tr></table>
</div>
</div><p><strong>start.sh脚本内容如下：</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="cp">#!/bin/bash
</span><span class="cp"></span>nohup ./mysqld_exporter --config.my-cnf<span class="o">=</span>/data/monitor/mysqld_exporter/.my.cnf <span class="p">&amp;</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">chmod <span class="m">744</span> start.sh
</code></pre></td></tr></table>
</div>
</div><p><strong>注册服务</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1">#创建启动文件</span>
vim /etc/systemd/system/mysqld_exporter.service
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>Unit<span class="o">]</span>
<span class="nv">Description</span><span class="o">=</span>mysqld_exporter service
<span class="nv">After</span><span class="o">=</span>network.target
<span class="o">[</span>Service<span class="o">]</span>
<span class="nv">Type</span><span class="o">=</span>forking
<span class="nv">WorkingDirectory</span><span class="o">=</span>/data/monitor/mysqld_exporter
<span class="nv">ExecStart</span><span class="o">=</span>/data/monitor/mysqld_exporter/start.sh
<span class="o">[</span>Install<span class="o">]</span>
<span class="nv">WantedBy</span><span class="o">=</span>multi-user.target
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1">#设置开机自启</span>
systemctl daemon-reload
systemctl <span class="nb">enable</span> mysqld_exporter
stemctl start mysqld_exporter
</code></pre></td></tr></table>
</div>
</div><h4 id="614-启动后的访问端是-启-9104访问访-http数据库服务器-数-ip9104metrics">6.1.4 启动后的访问端⼝是 启 9104：访问访 http://数据库服务器 数 ip:9104/metrics</h4>
<p></p>
<h3 id="62-把-mysql_exporter-这个采集程序接配置到-这-prometheusyml-参照下图参考文件prometheusyml">6.2 把 mysql_exporter 这个采集程序接⼊配置到 这 prometheus.yml 参照下图<a href="/prometheus.yml" rel="">参考文件</a>
</h3>
<p></p>
<p><strong>导⼊node_exporter 后，重新载⼊配置 :</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">curl -X POST http://localhost:9090/prometheus/-/reload
</code></pre></td></tr></table>
</div>
</div><h3 id="63配置配-grafana管理后台这一步可以省略">6.3配置配 grafana管理后台(这一步可以省略)</h3>
<p></p>
<h4 id="631-上传上-mysql监控模板--下载更多面板链接httpsgrafanacomgrafanadashboardssearchmysql">6.3.1 上传上 mysql监控模板  <a href="https://grafana.com/grafana/dashboards?search=mysql" target="_blank" rel="noopener noreffer">下载更多面板链接</a>
</h4>
<p></p>
<p><strong>注：<a href="/%e5%a4%a7%e7%9b%98%e9%85%8d%e7%bd%ae/mysql.json" rel="">下载文mysql大盘</a>
</strong></p>
<p></p>
<p></p>
<h2 id="7-设置邮件告警">7、 设置邮件告警</h2>
<p><strong>1、 修改修 grafana 告警配置文件 告 SMTP 邮箱配置修改邮箱相关的配置，例如下面。重启 grafan 系统。 vim /data/monitor/grafana/conf/defaults.ini</strong></p>
<p></p>
<h3 id="2配置通知邮箱-配-在-grafana">2、配置通知邮箱 配 在 grafana</h3>
<p></p>
<p></p>
<p></p>
<p><strong>关键字： Template variables are not supported in alert queries</strong></p>
<p><strong>分析： 分 由于Prometheus 告警不支持变量，而模板面板使用了⼤量变量，导致不可使用告警。 解决办法：单独配置个告警的视图，用正则匹配出所有的主机 或者每台主机单独⼀个查询 语句</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml">(1 - (node_memory_MemAvailable_bytes{instance=&#34;101.133.173.223:9100&#34;} / (node_memory_MemTotal_bytes{instance=&#34;101.133.173.223:9100&#34;})))*100
</code></pre></td></tr></table>
</div>
</div><p></p>
<p></p>
<h2 id="8设置其他告警演示设置企业微信群告警">8、设置其他告警，演示设置企业微信群告警</h2>
<p><strong>注： PrometheusAlert全家桶是开源的运维告警中心消息转发系统,支持主流的监控系统Prometheus,Zabbix,日志系统Graylog和数据可视化系统Grafana发出的预警消息,支持钉钉,微信,华为云短信,腾讯云短信,腾讯云电话,阿里云短信,阿里云电话等</strong></p>
<p><a href="https://gitee.com/feiyu563/PrometheusAlert" target="_blank" rel="noopener noreffer">gitee项目地址</a>
  <a href="/package/linux.zip" rel="">下载包</a>
</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1">#如果下载不下来，package文件夹中有liunx.zip包</span>
wget https://github.com/feiyu563/PrometheusAlert/releases/download/v4.4.0/linux.zip

mkdir -p /data/monitor/linux_PrometheusAlert

<span class="c1">#确保解压后文件在/data/monitor/linux_PrometheusAlert夹中</span>
mv linux.zip /data/monitor/linux_PrometheusAlert/ <span class="o">&amp;&amp;</span> <span class="nb">cd</span> /data/monitor/linux_PrometheusAlert/ <span class="o">&amp;&amp;</span> unzip linux.zip <span class="o">&amp;&amp;</span> <span class="nb">cd</span> linux/ <span class="o">&amp;&amp;</span> mv * ../ <span class="o">&amp;&amp;</span> <span class="nb">cd</span> ../ <span class="o">&amp;&amp;</span> rm -rf linux/

<span class="c1">#运行PrometheusAlert</span>
<span class="c1"># ./PrometheusAlert (#后台运行请执行 nohup ./PrometheusAlert &amp;)</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="81启动">8.1启动</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">chmod <span class="m">777</span> PrometheusAlert

<span class="nb">cd</span> /data/monitor/linux_PrometheusAlert
<span class="c1">#创建start.sh脚本</span>
vim start.sh
</code></pre></td></tr></table>
</div>
</div><p><strong>start.sh脚本内容如下：</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="cp">#!/bin/bash
</span><span class="cp"></span>nohup /data/monitor/linux_PrometheusAlert/PrometheusAlert <span class="p">&amp;</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">chmod <span class="m">744</span> start.sh
</code></pre></td></tr></table>
</div>
</div><p><strong>注册服务</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1">#创建启动文件</span>
vim /etc/systemd/system/PrometheusAlert.service
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="o">[</span>Unit<span class="o">]</span>
<span class="nv">Description</span><span class="o">=</span>mysqld_exporter service
<span class="nv">After</span><span class="o">=</span>network.target
<span class="o">[</span>Service<span class="o">]</span>
<span class="nv">Type</span><span class="o">=</span>forking
<span class="nv">WorkingDirectory</span><span class="o">=</span>/data/monitor/linux_PrometheusAlert/
<span class="nv">ExecStart</span><span class="o">=</span>/data/monitor/linux_PrometheusAlert/start.sh
<span class="o">[</span>Install<span class="o">]</span>
<span class="nv">WantedBy</span><span class="o">=</span>multi-user.target
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell"><span class="c1">#设置开机自启</span>
systemctl daemon-reload
systemctl <span class="nb">enable</span> PrometheusAlert
systemctl start PrometheusAlert

<span class="c1">#启动后可使用浏览器打开以下地址查看：http://127.0.0.1:8080</span>
<span class="c1">#默认登录帐号和密码在conf/app.conf中有配置</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="82-企业微信告警配置">8.2 企业微信告警配置</h3>
<p>打开企业微信,进入企业微信群中,选择群设置&ndash;&gt;群机器人&ndash;&gt;添加，可参下图：</p>
<p></p>
<p></p>
<p><strong>复制图中的Webhook地址，并填入PrometheusAlert配置文件app.conf中对应配置项即可。</strong></p>
<p></p>
<p><strong>企业微信机器人目前支持的markdown语法是如下的子集：</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-markdown" data-lang="markdown">标题 （支持1至6级标题，注意#与文字中间要有空格）
<span class="gh"># 标题一
</span><span class="gh"></span><span class="gu">## 标题二
</span><span class="gu">### 标题三
</span><span class="gu">#### 标题四
</span><span class="gu">##### 标题五
</span><span class="gu">###### 标题六
</span><span class="gu"></span>
加粗
<span class="gs">**bold**</span>

链接
[<span class="nt">这是一个链接</span>](<span class="na">http://work.weixin.qq.com/api/doc</span>)

行内代码段（暂不支持跨行）
<span class="sb">`code`</span>

引用
<span class="k">&gt; </span><span class="ge">引用文字
</span><span class="ge"></span>
字体颜色(只支持3种内置颜色)
<span class="p">&lt;</span><span class="nt">font</span> <span class="na">color</span><span class="o">=</span><span class="s">&#34;info&#34;</span><span class="p">&gt;</span>绿色<span class="p">&lt;/</span><span class="nt">font</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">font</span> <span class="na">color</span><span class="o">=</span><span class="s">&#34;comment&#34;</span><span class="p">&gt;</span>灰色<span class="p">&lt;/</span><span class="nt">font</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">font</span> <span class="na">color</span><span class="o">=</span><span class="s">&#34;warning&#34;</span><span class="p">&gt;</span>橙红色<span class="p">&lt;/</span><span class="nt">font</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p><strong>测试发送机器人</strong></p>
<p></p>
<p></p>
<h4 id="grafana内置固定消息模版接入配置">grafana（内置固定消息模版）接入配置</h4>
<p><strong>首先使用管理员或者具有告警配置权限的帐号登录进Grafana管理页面，登录后进入notification channels配置。</strong></p>
<p></p>
<p></p>
<p><strong>注意这里的url地址填写上自己部署所在的url</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">/grafana/dingding  处理Grafana告警消息转发到钉钉接口，可选参数(ddurl)
/grafana/weixin    处理Grafana告警消息转发到微信接口，可选参数(wxurl)
/grafana/feishu    处理Grafana告警消息转发到飞书接口，可选参数(fsurl)
/grafana/txdx      处理Grafana告警消息转发到腾讯云短信接口，可选参数(phone)
/grafana/txdh      处理Grafana告警消息转发到腾讯云电话接口，可选参数(phone)
/grafana/hwdx      处理Grafana告警消息转发到华为云短信接口，可选参数(phone)
/grafana/bddx      处理Grafana告警消息转发到百度云短信接口，可选参数(phone)
/grafana/alydx     处理Grafana告警消息转发到阿里云短信接口，可选参数(phone)
/grafana/rlydh     处理Grafana告警消息转发到容联云电话接口，可选参数(phone)
/grafana/email     处理Grafana告警消息转发到email接口，可选参数(email)
/grafana/tg        处理Grafana告警消息转发到telegram接口
/grafana/workwechat处理Grafana告警消息转发到企业微信应用接口
</code></pre></td></tr></table>
</div>
</div><p></p>
<p><strong>效果</strong></p>
<p></p>
<h2 id="9参考文档">9.参考文档</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">#Prometheus Alert
https://gitee.com/feiyu563/PrometheusAlert#/feiyu563/PrometheusAlert/blob/master/doc/readme/grafana.md

#grafana创建告警
https://grafana.com/docs/grafana/latest/alerting/old-alerting/create-alerts/
</code></pre></td></tr></table>
</div>
</div><p>注释：大盘json文件  <a href="/%e5%a4%a7%e7%9b%98%e9%85%8d%e7%bd%ae/%e6%94%bf%e5%8a%a1%e5%be%ae%e4%bf%a1%e5%a4%a7%e7%9b%98.json" rel="">下载</a>
</p>
<p><strong>Prometheus常用查询函数 产考连接:https://www.cnblogs.com/xjzyy/p/15346954.html</strong></p>
]]></description>
</item>
<item>
    <title>Linux扩容home目录</title>
    <link>https://freerun.site/linux%E6%89%A9%E5%AE%B9home%E7%9B%AE%E5%BD%95/</link>
    <pubDate>Sat, 18 Sep 2021 15:19:40 &#43;0800</pubDate>
    <author>Ylimhs</author>
    <guid>https://freerun.site/linux%E6%89%A9%E5%AE%B9home%E7%9B%AE%E5%BD%95/</guid>
    <description><![CDATA[<p>机器装了一块新硬盘, 先使用sudo fdisk -l看看新添加的硬盘叫什么, 我的叫sdb接下来按照这篇文章操作即可, 该文章新挂载的硬盘叫sdb1, 注意替换成自己的硬盘名</p>
<p>注释：先使用<code>sudo fdisk -l</code>看看新添加的硬盘叫什么,我的叫sdb1</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">lsblk -f <span class="c1">#列出块设备列表，-f用于输出文件系统的详细信息</span>
</code></pre></td></tr></table>
</div>
</div><p>0.格式化分区</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">mkfs.ext4 /dev/sdb1
</code></pre></td></tr></table>
</div>
</div><p>1.创建目录</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">mkdir /media/home
</code></pre></td></tr></table>
</div>
</div><p>2.把/dev/sdb1挂载到/media/home</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">mount /dev/sdb1 /media/home
</code></pre></td></tr></table>
</div>
</div><p>3.执行几次sync命令,确保文件系统数据都落盘</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">sync  <span class="c1">#执行三次或更多次sync命令</span>

<span class="c1">#在Linux系统中，为了加快数据的读取速度，所以在默认的情况中， 某些已经加载内存中的数据将不会直接被写回硬盘，而是先缓存在内存当中，如此一来， 如果一个数据被你重复的改写，那么由于他尚未被写入硬盘中，因此可以直接由内存当中读取出来， 在速度上一定是快上相当多的！</span>

<span class="c1">#不过，如此一来也造成些许的困扰，那就是万一你的系统因为某些特殊情况造成不正常关机 (例如停电或者是不小心踢到power)时，由于数据尚未被写入硬盘当中，哇！所以就会造成数据的升级不正常啦！ 那要怎么办呢？这个时候就需要sync这个命令来进行数据的写入动作啦！ 直接在文字接口下输入sync，那么在内存中尚未被升级的数据，就会被写入硬盘中！所以，这个命令在系统关机或重新启动之前， 很重要喔！最好多运行几次(2-4次)！</span>
</code></pre></td></tr></table>
</div>
</div><p>4.同步/home到/media/home</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">rsync -aXS /home/. /media/home/.
<span class="c1">#或者加上-v详细模式输出 rsync -avXS /home/. /media/home/.</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback"># Options
-v, --verbose 			# 详细模式输出。(打印一些信息，比如文件列表、文件数量等)
-q, --quiet 			# 精简输出模式。
-c, --checksum 			# 打开校验开关，强制对文件传输进行校验。
-a, --archive 			# 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD。
-r, --recursive 		# 对子目录以递归模式处理。
-R, --relative 			# 使用相对路径信息。
-b, --backup 			# 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。
--backup-dir 			# 将备份文件(如~filename)存放在在目录下。
-suffix=SUFFIX 			# 定义备份文件前缀。
-u, --update 			# 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件，不覆盖更新的文件。
-l, --links 			# 保留软链结。
-L, --copy-links 		# 想对待常规文件一样处理软链结。
--copy-unsafe-links		# 仅仅拷贝指向SRC路径目录树以外的链结。
--safe-links 			# 忽略指向SRC路径目录树以外的链结。
-H, --hard-links 		# 保留硬链结。
-p, --perms 			# 保持文件权限。
-o, --owner 			# 保持文件属主信息。
-g, --group 			# 保持文件属组信息。
-D, --devices 			# 保持设备文件信息。
-t, --times 			# 保持文件时间信息。
-S, --sparse 			# 对稀疏文件进行特殊处理以节省DST的空间。
-n, --dry-run			# 现实哪些文件将被传输。
-w, --whole-file 		# 拷贝文件，不进行增量检测。
-x, --one-file-system	# 不要跨越文件系统边界。
-X, --xattrs			# 保留扩展属性
-B, --block-size=SIZE	# 检验算法使用的块尺寸，默认是700字节。
-e, --rsh=command 		# 指定使用rsh、ssh方式进行数据同步。
--rsync-path=PATH 		# 指定远程服务器上的rsync命令所在路径信息。
-C, --cvs-exclude 		# 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件。
--existing				# 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件。
--delete				# 删除那些DST中SRC没有的文件。
--delete-excluded 		# 同样删除接收端那些被该选项指定排除的文件。
--delete-after 			# 传输结束以后再删除。
--ignore-errors 		# 及时出现IO错误也进行删除。
--max-delete=NUM 		# 最多删除NUM个文件。
--partial				# 保留那些因故没有完全传输的文件，以是加快随后的再次传输。
--force					# 强制删除目录，即使不为空。
--numeric-ids 			# 不将数字的用户和组id匹配为用户名和组名。
--timeout=time 			# ip超时时间，单位为秒。
-I, --ignore-times 		# 不跳过那些有同样的时间和长度的文件。
--size-only 			# 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间。
--modify-window=NUM		# 决定文件是否时间相同时使用的时间戳窗口，默认为0。
-T --temp-dir=DIR 		# 在DIR中创建临时文件。
--compare-dest=DIR 		# 同样比较DIR中的文件来决定是否需要备份。
-P						# 等同于 --partial。
--progress				# 显示备份过程。
-z, --compress 			# 对备份的文件在传输时进行压缩处理。
--exclude=PATTERN 		# 指定排除不需要传输的文件模式。
--include=PATTERN 		# 指定不排除而需要传输的文件模式。
--exclude-from=FILE		# 排除FILE中指定模式的文件。
--include-from=FILE		# 不排除FILE指定模式匹配的文件。
--version				# 打印版本信息。
--address				# 绑定到特定的地址。
--config=FILE 			# 指定其他的配置文件，不使用默认的rsyncd.conf文件。
--port=PORT 			# 指定其他的rsync服务端口。
--blocking-io 			# 对远程shell使用阻塞IO。
-stats					# 给出某些文件的传输状态。
--progress				# 在传输时现实传输过程。
--log-format=formAT		# 指定日志文件格式。
--password-file=FILE	# 从FILE中得到密码。
--bwlimit=KBPS 			# 限制I/O带宽，KBytes per second。
-h, --help				# 显示帮助信息。
</code></pre></td></tr></table>
</div>
</div><p>5.同步完成后重命名/home</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">mv /home /home_old
</code></pre></td></tr></table>
</div>
</div><p>6.新建/home</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">mkdir /home
</code></pre></td></tr></table>
</div>
</div><p>7.取消/dev/sdb1挂载</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">umount /dev/sdb1
</code></pre></td></tr></table>
</div>
</div><p>8.重新挂载/dev/sdb1到home</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">mount /dev/sdb1 /home
</code></pre></td></tr></table>
</div>
</div><p>9.查看/dev/sdb1的UUID</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">blkid
</code></pre></td></tr></table>
</div>
</div><p>10.把UUID复制下来，修改/etc/fstab文件，实现开机自动挂载</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">vim /etc/fstab
mount -a <span class="c1">#将/etc/fstab的所有内容重新加载。</span>
</code></pre></td></tr></table>
</div>
</div><p>在文件最后添加如下内容：
UUID=8da46012-ab9c-434f-a855-2484112fd1a7 /home ext4 nodev,nosuid 0 2</p>
<p>11.保存之后重启系统，查看分区的挂载情况</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">df –Th
</code></pre></td></tr></table>
</div>
</div><p>12.确认一切正常后删除/home_old</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">rm -rf /home_old
</code></pre></td></tr></table>
</div>
</div><p>至此，给/home增加空间的工作就完成了。</p>
]]></description>
</item>
<item>
    <title>Nethogs命令</title>
    <link>https://freerun.site/nethogs%E5%91%BD%E4%BB%A4/</link>
    <pubDate>Fri, 27 Aug 2021 15:25:51 &#43;0800</pubDate>
    <author>Ylimhs</author>
    <guid>https://freerun.site/nethogs%E5%91%BD%E4%BB%A4/</guid>
    <description><![CDATA[<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">wget https://github.com/raboof/nethogs/archive/v0.8.1.tar.gz
yum install libpcap-devel
tar zxvf v0.8.1.tar.gz
<span class="nb">cd</span> nethogs-0.8.1/
make <span class="o">&amp;&amp;</span> make install
nethogs eno1
</code></pre></td></tr></table>
</div>
</div><p></p>
<p><code>以下是NetHogs的一些很有用的交互控制(键盘快捷键)</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">
    -m: Change the units displayed forthe bandwidth inunits like KB/sec-&gt;KB-&gt;B-&gt;MB.
    -r: Sort by magnitude of respectively traffic.
    -s: Sort by magnitude of sent traffic.
    -q: Hit quit tothe shell prompt.

</code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
</channel>
</rss>
